# -----------------------------------------
# Grammar for BeepBeep 3; edit at your own risk!
#
# This is the EPL part of the language (Event Processing Language).
# Working with BeepBeep 3 also requires the inclusion of at least
# one grammar for the EML (Event Manipulation Language).
# -----------------------------------------

# Types

<number>             := ^\d+;
<boolean>            := TRUE | FALSE ;
<var_name>           := ^\$[\w\d]+;

# Processors

<processor>          := <p_freeze> | <p_window> | <p_decimate> | <p_prefix> 
                        | <p_cumulative> | <p_trim> | <p_slicer> | <p_collator> 
                        | <var_name> ;
<p_freeze>           := FREEZE ( <processor> ) ;
<p_trim>             := TRIM <number> OF ( <processor> ) ;
<p_window>           := APPLY ( <processor> ) ON ( <processor> ) ON A WINDOW OF <number> ;
<p_decimate>         := EVERY <number> <number_suffix> OF ( <processor> ) ;
<number_suffix>      := ST | ND | RD | TH ;
<p_prefix>           := THE FIRST <number> OF ( <processor> ) ;
<p_slicer>           := SLICE ( <processor> ) WITH ( <processor> ) ON <fct_name> ;

# Processor list

<p_collator>         := WITH <proc_list> ;
<proc_list>          := <proc_def> , <proc_list> | <proc_def> ;
<proc_def>           := <proc_def_named> | <proc_def_anonymous> ;
<proc_def_named>     := ( <processor> ) AS <var_name> ;
<proc_def_anonymous> := ( <processor> ) ;
<function>           := <map_placeholder> ;
<map_placeholder>    := <var_name> ;